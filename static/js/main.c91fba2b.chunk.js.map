{"version":3,"sources":["photodata/inter.jpg","components/nav.js","components/Header.js","components/screens/Home.js","components/screens/About.js","components/screens/Page.js","components/screens/Page1-1.js","components/screens/Page1-2.js","components/screens/Page1-3.js","components/screens/Page2-1.js","components/screens/Page2-2.js","components/screens/Info.js","components/screens/User.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","mobileNavUp","e","window","innerWidth","$","click","Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","src","logo","className","alt","Toggle","aria-controls","Collapse","id","Nav","to","onClick","NavDropdown","title","Item","as","Link","Divider","withRouter","location","Home","About","photoLists","width","height","Page","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","photos","onClose","currentIndex","views","map","x","srcset","srcSet","caption","Page1_1","Page1_2","Page1_3","Page2_1","Page2_2","Info","User","App","props","state","username","fetch","then","res","json","data","setState","this","path","component","Header","exact","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c91fba2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inter.37315df0.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './nav.css';\r\n\r\nimport $ from 'jquery';\r\n\r\nimport { DiReact } from \"react-icons/di\";\r\n\r\nimport logo from '../logo.svg';\r\n\r\n\r\nconst mobileNavUp = (e) => {\r\n    \r\n    //alert('alert');\r\n    \r\n    //$(\".navbar-toggler\").attr('class','navbar-toggler collapsed');  // navbar-toggler -> navbar-toggler collapsed 클래스명 변경\r\n    //document.getElementById(\"responsive-navbar-nav\").className = \"navbar-collapse collapse\";      // id 로 접근하여, 클래스명 변경\r\n    \r\n    if(window.innerWidth <= 991)        // 브라우저 가로 991px 이하면, 모바일\r\n    {\r\n        $('.navbar-toggler').click();       // 상단 Nav바에서, 모바일 버전 햄버거 버튼 클릭\r\n    }\r\n}\r\n\r\n\r\nfunction Navigation() {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            {/*  <img src={logo} className=\"App-logo-nav\" alt=\"logo\" />  */}\r\n           \r\n            <Navbar.Brand href=\"/\">\r\n                <img src={logo} className=\"App-logo-nav\" alt=\"logo\" />\r\n                Navbar\r\n            </Navbar.Brand>\r\n            \r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            \r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {/*\r\n                    <Nav.Link href=\"#Home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/About\">About1</Nav.Link>\r\n                    <Nav.Link className=\"nav-link\" to=\"/About\">About2</Nav.Link>\r\n\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    */}  \r\n                    {/* \r\n                        Nav.Link href='/About'으로 하면, 페이지가 전체가 새로고침됨. \r\n                        Link to 로 하면, 해당 컴포넌트만 변경됨. \r\n                        Link to 로 했더니, 메뉴 클릭하면, 햄버거 버튼이 접어지지 않아서, onClick 이벤트 추가함.\r\n                    */}   \r\n                    {/*  <Link className=\"nav-link\" to='/home' onClick={mobileNavUp}>Home</Link>  */}\r\n                    <Link className=\"nav-link\" to='/about' onClick={mobileNavUp}>About</Link>\r\n                    <Link className=\"nav-link\" to='/page' onClick={mobileNavUp}>Page</Link>\r\n\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                        {/* \r\n                            navDropdown도 마찬가지로, 페이지 전체가 새로고침됨.\r\n                            Link to 로 하면, 해당 컴포넌트만 변경됨.\r\n                            Link to 로 했더니, 메뉴 클릭하면, 햄버거 버튼이 접어지지 않아서, onClick 이벤트 추가함.\r\n                        */}\r\n                        <NavDropdown.Item as={Link} to=\"/page1-1\" onClick={mobileNavUp}>Page1-1</NavDropdown.Item>\r\n                        <NavDropdown.Item as={Link} to=\"/page1-2\" onClick={mobileNavUp}>Page1-2</NavDropdown.Item> \r\n                        <NavDropdown.Item as={Link} to=\"/page1-3\" onClick={mobileNavUp}>Page1-3</NavDropdown.Item> \r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item as={Link} to=\"/page2-1\" onClick={mobileNavUp}>Page2-1</NavDropdown.Item> \r\n                        <NavDropdown.Item as={Link} to=\"/page2-2\" onClick={mobileNavUp}>Page2-2</NavDropdown.Item> \r\n                    </NavDropdown>\r\n                </Nav>\r\n\r\n                <Nav>\r\n                    <Link className=\"nav-link\" to='/info' onClick={mobileNavUp}>Info</Link>   \r\n                    <Link className=\"nav-link\" to='/user' onClick={mobileNavUp}>User</Link>   \r\n                </Nav>\r\n\r\n                {/*\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-info\">Search</Button>\r\n                </Form>\r\n                */}\r\n            </Navbar.Collapse>\r\n            \r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Navigation from './nav'\r\n\r\nconst Header = ({ location }) => {\r\n  return (\r\n\r\n        <Navigation />\r\n        \r\n  );\r\n};\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n        Home\r\n        {/*username ? `Hello ${username}` : 'Hello React'*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"Screens\">\r\n      <h1>About22222222222222222222</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import React, { useState, useCallback } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nimport phototo from '../../photodata/inter.jpg';\r\n\r\nconst photoLists = [\r\n\t{\r\n\t  src: 'https://byline.network/wp-content/uploads/2018/05/Dog-original-1.jpg',\r\n\t  width: 4,\r\n\t  height: 3\r\n\t},\r\n\t{\r\n\t\tsrc: 'http://www.palnews.co.kr/news/photo/201801/92969_25283_5321.jpg',\r\n\t\twidth: 4,\r\n\t\theight: 3\r\n\t},\r\n\t{\r\n\t  src: 'http://example.com/example/img2.jpg',\r\n\t  width: 1,\r\n\t  height: 1\r\n\t}\r\n];\r\n\r\nconst Page = () => {\r\n\r\n\tconst [currentImage, setCurrentImage] = useState(0);\r\n\tconst [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  \r\n\tconst openLightbox = useCallback((event, { photo, index }) => {\r\n\t  setCurrentImage(index);\r\n\t  setViewerIsOpen(true);\r\n\t}, []);\r\n  \r\n\tconst closeLightbox = () => {\r\n\t  setCurrentImage(0);\r\n\t  setViewerIsOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\r\n\t\t\t<Gallery photos={photoLists} onClick={openLightbox} />\r\n\t\t\t<ModalGateway>\r\n\t\t\t\t{viewerIsOpen ? (\r\n\t\t\t\t\t<Modal onClose={closeLightbox}>\r\n\t\t\t\t\t\t{/* Carousel : 이미지 슬라이드 */}\r\n\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\tcurrentIndex={currentImage}\r\n\t\t\t\t\t\t\tviews={photoLists.map(x => ({\r\n\t\t\t\t\t\t\t\t...x,\r\n\t\t\t\t\t\t\t\tsrcset: x.srcSet,\r\n\t\t\t\t\t\t\t\tcaption: x.title\r\n\t\t\t\t\t\t\t}))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t) : null}\r\n\t\t\t</ModalGateway>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\n\r\nconst Page1_1 = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page1-1</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1_1;","import React from 'react';\r\n\r\nconst Page1_2 = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page1-2</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1_2;","import React from 'react';\r\n\r\nconst Page1_3 = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page1-3</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1_3;","import React from 'react';\r\n\r\nconst Page2_1 = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page2-1</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page2_1;","import React from 'react';\r\n\r\nconst Page2_2 = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page2-2</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page2_2;","import React from 'react';\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div>\r\n      <h1>Info</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nconst User = () => {\r\n  return (\r\n    <div>\r\n      <h1>User</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","import React from 'react';\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navigation from './components/nav'\n\nimport Header from './components/Header';\nimport Home from './components/screens/Home';\nimport About from './components/screens/About';\nimport Page from './components/screens/Page';\nimport Page1_1 from './components/screens/Page1-1';\nimport Page1_2 from './components/screens/Page1-2';\nimport Page1_3 from './components/screens/Page1-3';\nimport Page2_1 from './components/screens/Page2-1';\nimport Page2_2 from './components/screens/Page2-2';\nimport Info from './components/screens/Info';\nimport User from './components/screens/User';\n\n//function App() {\n//  return (\n//    <div className=\"App\">\n//      <header className=\"App-header\">\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//        <p>\n//          Edit <code>src/App.js</code> and save to reload.\n//        </p>\n//        <a\n//          className=\"App-link\"\n//          href=\"https://reactjs.org\"\n//          target=\"_blank\"\n//          rel=\"noopener noreferrer\"\n//        >\n//          Learn React\n//        </a>\n//      </header>\n//    </div>\n//  );\n//}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:null\n        };\n    }\n\n    componentDidMount() {\n        fetch('http://per.iptime.org:3001/api')\n            .then(res=>res.json())\n            .then(data=>this.setState({username:data.username}));\n    }\n\n    render() {\n        const {username} = this.state;\n        return (\n            <div className=\"App\">\n                \n                {/*\n                <Navigation />   */}   {/* ./components/nav.js */}\n                {/* \n                <header className=\"App-header\">\n                    \n                    <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n                    <p1 className=\"p-cover\">\n                        header\n                    </p1>\n                    \n                </header>\n\n                <body className=\"App-body\">\n                    {username ? `Hello ${username}` : 'Hello React'}\n                </body>\n                */}\n\n                <Router>\n                    <div>\n                        <Route path='/' component={Header} />\n                        \n                        {/* <div className=\"Screens\"> */}\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/about\" component={About} />\n                        \n                        <Route path=\"/page\" component={Page} />\n                        \n                        <Route path=\"/page1-1\" component={Page1_1} />\n                        <Route path=\"/page1-2\" component={Page1_2} />\n                        <Route path=\"/page1-3\" component={Page1_3} />\n                        <Route path=\"/page2-1\" component={Page2_1} />\n                        <Route path=\"/page2-2\" component={Page2_2} />\n                        <Route path=\"/info\" component={Info} />\n                        <Route path=\"/user\" component={User} />\n                        {/* </div> */}\n                        \n                    </div>\n                </Router>\n                \n            </div>\n            \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}